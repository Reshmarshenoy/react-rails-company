'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = FormInputRadio;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formInput = require('../formInput');

var _formInput2 = _interopRequireDefault(_formInput);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
//


function FormInputRadio(_ref) {
  var field = _ref.field,
      value = _ref.value,
      showErrors = _ref.showErrors,
      errorBefore = _ref.errorBefore,
      isForm = _ref.isForm,
      noTouch = _ref.noTouch,
      rest = _objectWithoutProperties(_ref, ['field', 'value', 'showErrors', 'errorBefore', 'isForm', 'noTouch']);

  return _react2.default.createElement(
    _formInput2.default,
    { field: field, showErrors: showErrors, errorBefore: errorBefore, isForm: isForm },
    function (_ref2) {
      var setValue = _ref2.setValue,
          getValue = _ref2.getValue,
          setTouched = _ref2.setTouched;

      return _react2.default.createElement('input', _extends({}, rest, {
        type: 'radio',
        checked: getValue(false) === value,
        onClick: function onClick(e) {
          return setValue(value, noTouch);
        },
        onBlur: function onBlur() {
          return setTouched();
        }
      }));
    }
  );
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mb3JtSW5wdXRzL3JhZGlvLmpzIl0sIm5hbWVzIjpbIkZvcm1JbnB1dFJhZGlvIiwiZmllbGQiLCJ2YWx1ZSIsInNob3dFcnJvcnMiLCJlcnJvckJlZm9yZSIsImlzRm9ybSIsIm5vVG91Y2giLCJyZXN0Iiwic2V0VmFsdWUiLCJnZXRWYWx1ZSIsInNldFRvdWNoZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O2tCQUl3QkEsYzs7QUFKeEI7Ozs7QUFFQTs7Ozs7OztBQURBOzs7QUFHZSxTQUFTQSxjQUFULE9BQThGO0FBQUEsTUFBbkVDLEtBQW1FLFFBQW5FQSxLQUFtRTtBQUFBLE1BQTVEQyxLQUE0RCxRQUE1REEsS0FBNEQ7QUFBQSxNQUFyREMsVUFBcUQsUUFBckRBLFVBQXFEO0FBQUEsTUFBekNDLFdBQXlDLFFBQXpDQSxXQUF5QztBQUFBLE1BQTVCQyxNQUE0QixRQUE1QkEsTUFBNEI7QUFBQSxNQUFwQkMsT0FBb0IsUUFBcEJBLE9BQW9CO0FBQUEsTUFBUkMsSUFBUTs7QUFDM0csU0FDRTtBQUFBO0FBQUEsTUFBVyxPQUFPTixLQUFsQixFQUF5QixZQUFZRSxVQUFyQyxFQUFpRCxhQUFhQyxXQUE5RCxFQUEyRSxRQUFRQyxNQUFuRjtBQUNHLHFCQUFzQztBQUFBLFVBQXBDRyxRQUFvQyxTQUFwQ0EsUUFBb0M7QUFBQSxVQUExQkMsUUFBMEIsU0FBMUJBLFFBQTBCO0FBQUEsVUFBaEJDLFVBQWdCLFNBQWhCQSxVQUFnQjs7QUFDckMsYUFDRSxvREFDTUgsSUFETjtBQUVFLGNBQUssT0FGUDtBQUdFLGlCQUFTRSxTQUFTLEtBQVQsTUFBb0JQLEtBSC9CO0FBSUUsaUJBQVM7QUFBQSxpQkFBS00sU0FBU04sS0FBVCxFQUFnQkksT0FBaEIsQ0FBTDtBQUFBLFNBSlg7QUFLRSxnQkFBUTtBQUFBLGlCQUFNSSxZQUFOO0FBQUE7QUFMVixTQURGO0FBU0Q7QUFYSCxHQURGO0FBZUQiLCJmaWxlIjoicmFkaW8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG4vL1xuaW1wb3J0IEZvcm1JbnB1dCBmcm9tICcuLi9mb3JtSW5wdXQnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZvcm1JbnB1dFJhZGlvICh7IGZpZWxkLCB2YWx1ZSwgc2hvd0Vycm9ycywgZXJyb3JCZWZvcmUsIGlzRm9ybSwgbm9Ub3VjaCwgLi4ucmVzdCB9KSB7XG4gIHJldHVybiAoXG4gICAgPEZvcm1JbnB1dCBmaWVsZD17ZmllbGR9IHNob3dFcnJvcnM9e3Nob3dFcnJvcnN9IGVycm9yQmVmb3JlPXtlcnJvckJlZm9yZX0gaXNGb3JtPXtpc0Zvcm19PlxuICAgICAgeyh7c2V0VmFsdWUsIGdldFZhbHVlLCBzZXRUb3VjaGVkfSkgPT4ge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgey4uLnJlc3R9XG4gICAgICAgICAgICB0eXBlPSdyYWRpbydcbiAgICAgICAgICAgIGNoZWNrZWQ9e2dldFZhbHVlKGZhbHNlKSA9PT0gdmFsdWV9XG4gICAgICAgICAgICBvbkNsaWNrPXtlID0+IHNldFZhbHVlKHZhbHVlLCBub1RvdWNoKX1cbiAgICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0VG91Y2hlZCgpfVxuICAgICAgICAgIC8+XG4gICAgICAgIClcbiAgICAgIH19XG4gICAgPC9Gb3JtSW5wdXQ+XG4gIClcbn1cbiJdfQ==