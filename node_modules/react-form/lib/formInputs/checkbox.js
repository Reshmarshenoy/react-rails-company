'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = FormInputCheckbox;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _formInput = require('../formInput');

var _formInput2 = _interopRequireDefault(_formInput);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
//


function FormInputCheckbox(_ref) {
  var field = _ref.field,
      showErrors = _ref.showErrors,
      errorBefore = _ref.errorBefore,
      isForm = _ref.isForm,
      noTouch = _ref.noTouch,
      rest = _objectWithoutProperties(_ref, ['field', 'showErrors', 'errorBefore', 'isForm', 'noTouch']);

  return _react2.default.createElement(
    _formInput2.default,
    { field: field, showErrors: showErrors, errorBefore: errorBefore, isForm: isForm },
    function (_ref2) {
      var setValue = _ref2.setValue,
          getValue = _ref2.getValue,
          setTouched = _ref2.setTouched;

      return _react2.default.createElement('input', _extends({}, rest, {
        type: 'checkbox',
        checked: getValue(false),
        onChange: function onChange(e) {
          return setValue(e.target.checked, noTouch);
        },
        onBlur: function onBlur() {
          return setTouched();
        }
      }));
    }
  );
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mb3JtSW5wdXRzL2NoZWNrYm94LmpzIl0sIm5hbWVzIjpbIkZvcm1JbnB1dENoZWNrYm94IiwiZmllbGQiLCJzaG93RXJyb3JzIiwiZXJyb3JCZWZvcmUiLCJpc0Zvcm0iLCJub1RvdWNoIiwicmVzdCIsInNldFZhbHVlIiwiZ2V0VmFsdWUiLCJzZXRUb3VjaGVkIiwiZSIsInRhcmdldCIsImNoZWNrZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O2tCQUl3QkEsaUI7O0FBSnhCOzs7O0FBRUE7Ozs7Ozs7QUFEQTs7O0FBR2UsU0FBU0EsaUJBQVQsT0FBMEY7QUFBQSxNQUE1REMsS0FBNEQsUUFBNURBLEtBQTREO0FBQUEsTUFBckRDLFVBQXFELFFBQXJEQSxVQUFxRDtBQUFBLE1BQXpDQyxXQUF5QyxRQUF6Q0EsV0FBeUM7QUFBQSxNQUE1QkMsTUFBNEIsUUFBNUJBLE1BQTRCO0FBQUEsTUFBcEJDLE9BQW9CLFFBQXBCQSxPQUFvQjtBQUFBLE1BQVJDLElBQVE7O0FBQ3ZHLFNBQ0U7QUFBQTtBQUFBLE1BQVcsT0FBT0wsS0FBbEIsRUFBeUIsWUFBWUMsVUFBckMsRUFBaUQsYUFBYUMsV0FBOUQsRUFBMkUsUUFBUUMsTUFBbkY7QUFDRyxxQkFBc0M7QUFBQSxVQUFwQ0csUUFBb0MsU0FBcENBLFFBQW9DO0FBQUEsVUFBMUJDLFFBQTBCLFNBQTFCQSxRQUEwQjtBQUFBLFVBQWhCQyxVQUFnQixTQUFoQkEsVUFBZ0I7O0FBQ3JDLGFBQ0Usb0RBQ01ILElBRE47QUFFRSxjQUFLLFVBRlA7QUFHRSxpQkFBU0UsU0FBUyxLQUFULENBSFg7QUFJRSxrQkFBVTtBQUFBLGlCQUFLRCxTQUFTRyxFQUFFQyxNQUFGLENBQVNDLE9BQWxCLEVBQTJCUCxPQUEzQixDQUFMO0FBQUEsU0FKWjtBQUtFLGdCQUFRO0FBQUEsaUJBQU1JLFlBQU47QUFBQTtBQUxWLFNBREY7QUFTRDtBQVhILEdBREY7QUFlRCIsImZpbGUiOiJjaGVja2JveC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbi8vXG5pbXBvcnQgRm9ybUlucHV0IGZyb20gJy4uL2Zvcm1JbnB1dCdcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRm9ybUlucHV0Q2hlY2tib3ggKHsgZmllbGQsIHNob3dFcnJvcnMsIGVycm9yQmVmb3JlLCBpc0Zvcm0sIG5vVG91Y2gsIC4uLnJlc3QgfSkge1xuICByZXR1cm4gKFxuICAgIDxGb3JtSW5wdXQgZmllbGQ9e2ZpZWxkfSBzaG93RXJyb3JzPXtzaG93RXJyb3JzfSBlcnJvckJlZm9yZT17ZXJyb3JCZWZvcmV9IGlzRm9ybT17aXNGb3JtfT5cbiAgICAgIHsoe3NldFZhbHVlLCBnZXRWYWx1ZSwgc2V0VG91Y2hlZH0pID0+IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHsuLi5yZXN0fVxuICAgICAgICAgICAgdHlwZT0nY2hlY2tib3gnXG4gICAgICAgICAgICBjaGVja2VkPXtnZXRWYWx1ZShmYWxzZSl9XG4gICAgICAgICAgICBvbkNoYW5nZT17ZSA9PiBzZXRWYWx1ZShlLnRhcmdldC5jaGVja2VkLCBub1RvdWNoKX1cbiAgICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0VG91Y2hlZCgpfVxuICAgICAgICAgIC8+XG4gICAgICAgIClcbiAgICAgIH19XG4gICAgPC9Gb3JtSW5wdXQ+XG4gIClcbn1cbiJdfQ==